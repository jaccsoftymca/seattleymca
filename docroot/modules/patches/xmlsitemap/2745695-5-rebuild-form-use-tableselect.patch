diff --git a/src/Form/XmlSitemapRebuildForm.php b/src/Form/XmlSitemapRebuildForm.php
index 773da0e..70169eb 100644
--- a/src/Form/XmlSitemapRebuildForm.php
+++ b/src/Form/XmlSitemapRebuildForm.php
@@ -8,6 +8,7 @@ use Drupal\Core\State\StateInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
 
 /**
  * Configure xmlsitemap settings for this site.
@@ -71,22 +72,40 @@ class XmlSitemapRebuildForm extends ConfigFormBase {
       else {
         $request->query->set('destination', 'admin/config/search/xmlsitemap');
         drupal_set_message(t('A rebuild is not necessary. If you are just wanting to regenerate the XML sitemap files, you can <a href="@link-cron">run cron manually</a>.', array('@link-cron' => Url::fromRoute('system.run_cron', [], array('query' => drupal_get_destination())))), 'warning');
-        $this->setRequest($request);
+        $requestStack = new RequestStack();
+        $requestStack->push($request);
+        $this->setRequestStack($requestStack);
       }
     }
 
     // Build a list of rebuildable link types.
     $rebuild_types = xmlsitemap_get_rebuildable_link_types();
     $rebuild_types = array_combine($rebuild_types, $rebuild_types);
+
+    $options = [];
+    $default_values = [];
+    foreach ($rebuild_types as $rebuild_type) {
+      $info = xmlsitemap_get_link_info($rebuild_type);
+      $options[$rebuild_type] = [
+        'label' => $info['label'],
+      ];
+      if ($this->state->get('xmlsitemap_rebuild_needed') || !$this->state->get('xmlsitemap_developer_mode')) {
+        $default_values[$rebuild_type] = TRUE;
+      }
+    }
+
     $form['entity_type_ids'] = array(
-      '#type' => 'select',
+      '#type' => 'tableselect',
+      '#header' => [
+        'label' => t('Sitemap entity'),
+      ],
+      '#tableselect' => TRUE,
+      '#options' => $options,
       '#title' => t('Select which link types you would like to rebuild'),
       '#description' => t('If no link types are selected, the sitemap files will just be regenerated.'),
-      '#multiple' => TRUE,
-      '#options' => $rebuild_types,
-      '#default_value' => $this->state->get('xmlsitemap_rebuild_needed') || !$this->state->get('xmlsitemap_developer_mode') ? $rebuild_types : array(),
-      '#access' => $this->state->get('xmlsitemap_developer_mode'),
+      '#default_value' => $default_values,
     );
+
     $form['save_custom'] = array(
       '#type' => 'checkbox',
       '#title' => t('Save and restore any custom inclusion and priority links.'),
