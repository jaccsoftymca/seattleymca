diff --git a/src/AliasStorageHelper.php b/src/AliasStorageHelper.php
index 6518224..14aff6a 100644
--- a/src/AliasStorageHelper.php
+++ b/src/AliasStorageHelper.php
@@ -196,9 +196,14 @@ class AliasStorageHelper implements AliasStorageHelperInterface {
    * {@inheritdoc}
    */
   public function loadBySourcePrefix($source) {
-    return $this->database->select('url_alias', 'u')
-      ->fields('u', array('pid'))
-      ->condition('source', $source . '%', 'LIKE')
+    $select = $this->database->select('url_alias', 'u')
+      ->fields('u', array('pid'));
+
+    $or_group = $select->orConditionGroup()->condition('source', $source)
+      ->condition('source', rtrim($source, '/') . '/%', 'LIKE');
+
+    return $select
+      ->condition($or_group)
       ->execute()
       ->fetchCol();
   }
@@ -207,8 +212,14 @@ class AliasStorageHelper implements AliasStorageHelperInterface {
    * {@inheritdoc}
    */
   public function countBySourcePrefix($source) {
-    return $this->database->select('url_alias')
-      ->condition('source', $source . '%', 'LIKE')
+    $select = $this->database->select('url_alias', 'u')
+      ->fields('u', array('pid'));
+
+    $or_group = $select->orConditionGroup()->condition('source', $source)
+      ->condition('source', rtrim($source, '/') . '/%', 'LIKE');
+
+    return $select
+      ->condition($or_group)
       ->countQuery()
       ->execute()
       ->fetchField();
diff --git a/tests/src/Kernel/PathautoKernelTest.php b/tests/src/Kernel/PathautoKernelTest.php
index df0e926..c3438b5 100644
--- a/tests/src/Kernel/PathautoKernelTest.php
+++ b/tests/src/Kernel/PathautoKernelTest.php
@@ -254,11 +254,13 @@ class PathautoKernelTest extends KernelTestBase {
     $this->saveAlias('/node/1', '/node-1-alias-en', 'en');
     $this->saveAlias('/node/1', '/node-1-alias-fr', 'fr');
     $this->saveAlias('/node/2', '/node-2-alias');
+    $this->saveAlias('/node/10', '/node-10-alias');
 
     \Drupal::service('pathauto.alias_storage_helper')->deleteBySourcePrefix('/node/1');
     $this->assertNoAliasExists(array('source' => "/node/1"));
     $this->assertNoAliasExists(array('source' => "/node/1/view"));
     $this->assertAliasExists(array('source' => "/node/2"));
+    $this->assertAliasExists(array('source' => "/node/10"));
   }
 
   /**
