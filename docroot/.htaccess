#
# Apache/PHP/Drupal settings:
#

# Protect files and directories from prying eyes.
<FilesMatch "\.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$">
  <IfModule mod_authz_core.c>
    Require all denied
  </IfModule>
  <IfModule !mod_authz_core.c>
    Order allow,deny
  </IfModule>
</FilesMatch>

# Don't show directory listings for URLs which map to a directory.
Options -Indexes

# Set the default handler.
DirectoryIndex index.php index.html index.htm

# Add correct encoding for SVGZ.
AddType image/svg+xml svg svgz
AddEncoding gzip svgz

# Most of the following PHP settings cannot be changed at runtime. See
# sites/default/default.settings.php and
# Drupal\Core\DrupalKernel::bootEnvironment() for settings that can be
# changed at runtime.

# PHP 5, Apache 1 and 2.
<IfModule mod_php5.c>
  php_value assert.active                   0
  php_flag session.auto_start               off
  php_value mbstring.http_input             pass
  php_value mbstring.http_output            pass
  php_flag mbstring.encoding_translation    off
  # PHP 5.6 has deprecated $HTTP_RAW_POST_DATA and produces warnings if this is
  # not set.
  php_value always_populate_raw_post_data   -1
</IfModule>

# Requires mod_expires to be enabled.
<IfModule mod_expires.c>
  # Enable expirations.
  ExpiresActive On

  # Cache all files for 2 weeks after access (A).
  ExpiresDefault A1209600

  <FilesMatch \.php$>
    # Do not allow PHP scripts to be cached unless they explicitly send cache
    # headers themselves. Otherwise all scripts would have to overwrite the
    # headers set by mod_expires if they want another caching behavior. This may
    # fail if an error occurs early in the bootstrap process, and it may cause
    # problems if a non-Drupal PHP file is installed in a subdirectory.
    ExpiresActive Off
  </FilesMatch>
</IfModule>

# Set a fallback resource if mod_rewrite is not enabled. This allows Drupal to
# work without clean URLs. This requires Apache version >= 2.2.16. If Drupal is
# not accessed by the top level URL (i.e.: http://example.com/drupal/ instead of
# http://example.com/), the path to index.php will need to be adjusted.
<IfModule !mod_rewrite.c>
  FallbackResource /index.php
</IfModule>

# Various rewrite rules.
<IfModule mod_rewrite.c>
  RewriteEngine on

  # Set "protossl" to "s" if we were accessed via https://.  This is used later
  # if you enable "www." stripping or enforcement, in order to ensure that
  # you don't bounce between http and https.
  RewriteRule ^ - [E=protossl]
  RewriteCond %{HTTPS} on
  RewriteRule ^ - [E=protossl:s]

  # Bare redirect for prod domains.
  RewriteCond %{HTTP_HOST} ^prod\.seattleymca\.org [NC]
  RewriteRule ^(.*)$ http%{ENV:protossl}://www.seattleymca.org/$1 [R=301,L]
  RewriteCond %{HTTP_HOST} ^ymcaseattle\.prod\.acquia-sites\.com [NC]
  RewriteRule ^(.*)$ http%{ENV:protossl}://www.seattleymca.org/$1 [R=301,L]

  # Bare redirect for stg domains.
  RewriteCond %{HTTP_HOST} ^ymcaseattlestg\.prod\.acquia-sites\.com [NC]
  RewriteRule ^(.*)$ http%{ENV:protossl}://stg.seattleymca.org/$1 [R=301,L]

  # Bare redirect for dev domains.
  RewriteCond %{HTTP_HOST} ^ymcaseattledev\.prod\.acquia-sites\.com [NC]
  RewriteRule ^(.*)$ http%{ENV:protossl}://dev.seattleymca.org/$1 [R=301,L]

  # Redirect www.seattleymca.org/Pages/Welcome.aspx -> www.seattleymca.org.
  RewriteRule ^Pages/Welcome.aspx$ http%{ENV:protossl}://%{HTTP_HOST} [R=301,L]

  # Redirect www.seattleymca.org/Pages/Donate.aspx and www.seattleymca.org/Pages/Donate.aspx/% -> www.seattleymca.org/give/donate.
  RewriteRule ^Pages/Donate.aspx$ http%{ENV:protossl}://%{HTTP_HOST}/give/donate [R=301,L]
  RewriteRule ^Pages/Donate.aspx/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/give/donate [R=301,L]

  # Redirect www.seattleymca.org/Pages/Volunteer and www.seattleymca.org/Pages/Volunteer/% -> www.seattleymca.org/give/volunteer.
  RewriteRule ^Pages/Volunteer$ http%{ENV:protossl}://%{HTTP_HOST}/give/volunteer [R=301,L]
  RewriteRule ^Pages/Volunteer/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/give/volunteer [R=301,L]

  # Redirect www.seattleymca.org/Pages/Assistance.aspx and www.seattleymca.org/Pages/Assistance/% -> www.seattleymca.org/membership/financialassistance.
  RewriteRule ^Pages/Assistance.aspx$ http%{ENV:protossl}://%{HTTP_HOST}/membership/financialassistance [R=301,L]
  RewriteRule ^Pages/Assistance/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/membership/financialassistance [R=301,L]

  # Redirect www.seattleymca.org/Locations/Auburn and www.seattleymca.org/Locations/Auburn/% -> www.seattleymca.org/locations/auburn-valley-ymca.
  RewriteRule ^Locations/Auburn$ http%{ENV:protossl}://%{HTTP_HOST}/locations/auburn-valley-ymca [R=301,L]
  RewriteRule ^Locations/Auburn/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/auburn-valley-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Bellevue and www.seattleymca.org/Locations/Bellevue/% -> www.seattleymca.org/locations/bellevue-family-ymca.
  RewriteRule ^Locations/Bellevue$ http%{ENV:protossl}://%{HTTP_HOST}/locations/bellevue-family-ymca [R=301,L]
  RewriteRule ^Locations/Bellevue/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/bellevue-family-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/coalcreek and www.seattleymca.org/Locations/coalcreek/% -> www.seattleymca.org/locations/coal-creek-family-ymca.
  RewriteRule ^Locations/coalcreek$ http%{ENV:protossl}://%{HTTP_HOST}/locations/coal-creek-family-ymca [R=301,L]
  RewriteRule ^Locations/coalcreek/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/coal-creek-family-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/DaleTurner and www.seattleymca.org/Locations/DaleTurner/% -> www.seattleymca.org/locations/dale-turner-family-ymca.
  RewriteRule ^Locations/DaleTurner$ http%{ENV:protossl}://%{HTTP_HOST}/locations/dale-turner-family-ymca [R=301,L]
  RewriteRule ^Locations/DaleTurner/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/dale-turner-family-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Downtown and www.seattleymca.org/Locations/Downtown/% -> www.seattleymca.org/locations/downtown-seattle-ymca.
  RewriteRule ^Locations/Downtown$ http%{ENV:protossl}://%{HTTP_HOST}/locations/downtown-seattle-ymca [R=301,L]
  RewriteRule ^Locations/Downtown/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/downtown-seattle-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/MattGriffin and www.seattleymca.org/Locations/MattGriffin/% -> www.seattleymca.org/locations/matt-griffin-ymca.
  RewriteRule ^Locations/MattGriffin$ http%{ENV:protossl}://%{HTTP_HOST}/locations/matt-griffin-ymca [R=301,L]
  RewriteRule ^Locations/MattGriffin/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/matt-griffin-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/MeredithMathews and www.seattleymca.org/Locations/MeredithMathews/% -> www.seattleymca.org/locations/meredith-mathews-east-madison-ymca.
  RewriteRule ^Locations/MeredithMathews$ http%{ENV:protossl}://%{HTTP_HOST}/locations/meredith-mathews-east-madison-ymca [R=301,L]
  RewriteRule ^Locations/MeredithMathews/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/meredith-mathews-east-madison-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Northshore and www.seattleymca.org/Locations/Northshore/% -> www.seattleymca.org/locations/northshore-ymca.
  RewriteRule ^Locations/Northshore$ http%{ENV:protossl}://%{HTTP_HOST}/locations/locations/northshore-ymca [R=301,L]
  RewriteRule ^Locations/Northshore/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/northshore-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Sammamish and www.seattleymca.org/Locations/Sammamish/% -> www.seattleymca.org/locations/sammamish-community-ymca.
  RewriteRule ^Locations/Sammamish$ http%{ENV:protossl}://%{HTTP_HOST}/locations/sammamish-community-ymca [R=301,L]
  RewriteRule ^Locations/Sammamish/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/sammamish-community-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Snoqualmie and www.seattleymca.org/Locations/Snoqualmie/% -> www.seattleymca.org/locations/snoqualmie-valley-ymca.
  RewriteRule ^Locations/Snoqualmie$ http%{ENV:protossl}://%{HTTP_HOST}/locations/snoqualmie-valley-ymca [R=301,L]
  RewriteRule ^Locations/Snoqualmie/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/snoqualmie-valley-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/University and www.seattleymca.org/Locations/University/% -> www.seattleymca.org/locations/university-family-ymca.
  RewriteRule ^Locations/University$ http%{ENV:protossl}://%{HTTP_HOST}/locations/university-family-ymca [R=301,L]
  RewriteRule ^Locations/University/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/university-family-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/WestSeattle and www.seattleymca.org/Locations/WestSeattle/% -> www.seattleymca.org/locations/west-seattle-fauntleroy-ymca.
  RewriteRule ^Locations/WestSeattle$ http%{ENV:protossl}://%{HTTP_HOST}/locations/west-seattle-fauntleroy-ymca [R=301,L]
  RewriteRule ^Locations/WestSeattle/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/locations/west-seattle-fauntleroy-ymca [R=301,L]

  # Redirect www.seattleymca.org/Locations/Metrocenter and www.seattleymca.org/Locations/Metrocenter/% -> www.seattleymca.org/accelerator.
  RewriteRule ^Locations/Metrocenter$ http%{ENV:protossl}://%{HTTP_HOST}/accelerator [R=301,L]
  RewriteRule ^Locations/Metrocenter/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/accelerator [R=301,L]

  # Redirect www.seattleymca.org/Locations/FSMH and www.seattleymca.org/Locations/FSMH/% -> www.seattleymca.org/accelerator.
  RewriteRule ^Locations/FSMH$ http%{ENV:protossl}://%{HTTP_HOST}/accelerator [R=301,L]
  RewriteRule ^Locations/FSMH/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/accelerator [R=301,L]

  # Redirect www.seattleymca.org/Locations/Colman and www.seattleymca.org/Locations/Colman/% -> www.seattleymca.org/camps/colman.
  RewriteRule ^Locations/Colman$ http%{ENV:protossl}://%{HTTP_HOST}/camps/colman [R=301,L]
  RewriteRule ^Locations/Colman/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/camps/colman [R=301,L]

  # Redirect www.seattleymca.org/Locations/Orkila and www.seattleymca.org/Locations/Orkila/% -> www.seattleymca.org/camps/orkila.
  RewriteRule ^Locations/Orkila$ http%{ENV:protossl}://%{HTTP_HOST}/camps/orkila [R=301,L]
  RewriteRule ^Locations/Orkila/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/camps/orkila [R=301,L]

  # Redirect www.seattleymca.org/CoalCreek/Pages/CampTerry.aspx and www.seattleymca.org/Locations/CoalCreek/Pages/CampTerry/% -> www.seattleymca.org/camps/terry.
  RewriteRule ^CoalCreek/Pages/CampTerry.aspx$ http%{ENV:protossl}://%{HTTP_HOST}/camps/terry [R=301,L]
  RewriteRule ^Locations/CoalCreek/Pages/CampTerry/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/camps/terry [R=301,L]

  # Redirect www.seattleymca.org/Locations/YESC and www.seattleymca.org/Locations/YESC/% -> www.seattleymca.org/programs/youthprograms/earthservicecorps.
  RewriteRule ^Locations/YESC$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/earthservicecorps [R=301,L]
  RewriteRule ^Locations/YESC/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/earthservicecorps [R=301,L]

  # Redirect www.seattleymca.org/Locations/Global and www.seattleymca.org/Locations/Global/% -> www.seattleymca.org/programs/youthprograms/globalprograms.
  RewriteRule ^Locations/Global$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/globalprograms [R=301,L]
  RewriteRule ^Locations/Global/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/globalprograms [R=301,L]

  # Redirect www.seattleymca.org/Locations/YouthAndGovernment and www.seattleymca.org/Locations/YouthAndGovernment/% -> www.seattleymca.org/programs/youthprograms/youthandgovernments.
  RewriteRule ^Locations/YouthAndGovernment$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/youthandgovernment [R=301,L]
  RewriteRule ^Locations/YouthAndGovernment/(.*)$ http%{ENV:protossl}://%{HTTP_HOST}/programs/youthprograms/youthandgovernment [R=301,L]

  # Redirect plannedgiving.seattleymca.org and plannedgiving.seattleymca.org/% => www.seattleymca.org/give.
  RewriteCond %{HTTP_HOST} ^plannedgiving\.seattleymca\.org [NC]
  RewriteRule ^(.*)$ http://www.seattleymca.org/give [R=301,L]

  # Redirect volunteer.seattleymca.org and volunteer.seattleymca.org/% => www.seattleymca.org/give/volunteer.
  RewriteCond %{HTTP_HOST} ^volunteer\.seattleymca\.org [NC]
  RewriteRule ^(.*)$ http://www.seattleymca.org/give/volunteer [R=301,L]

  # Redirect give.seattleymca.org and give.seattleymca.org/% => www.seattleymca.org/give.
  RewriteCond %{HTTP_HOST} ^give\.seattleymca\.org [NC]
  RewriteRule ^(.*)$ http://www.seattleymca.org/give [R=301,L]

  # Redirect ystart.seattleymca.org and ystart.seattleymca.org/% -> www.seattleymca.org/membership.
  RewriteCond %{HTTP_HOST} ^ystart\.seattleymca\.org [NC]
  RewriteCond %{THE_REQUEST} !^(GET|POST)*\s\/msstayfit[\/]?\s.*$ [NC]
  RewriteRule ^(.*)$ http://www.seattleymca.org/membership [R=301,L]

  # Redirect ystart.wildcard -> www.seattleymca.org/membership.
  RewriteCond %{HTTP_HOST} ^ystart\.org/wildcard [NC]
  RewriteRule ^(.*)$ http://www.seattleymca.org/membership [R=301,L]

  # Make sure Authorization HTTP header is available to PHP
  # even when running as CGI or FastCGI.
  RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

  # Block access to "hidden" directories whose names begin with a period. This
  # includes directories used by version control systems such as Subversion or
  # Git to store control files. Files whose names begin with a period, as well
  # as the control files used by CVS, are protected by the FilesMatch directive
  # above.
  #
  # NOTE: This only works when mod_rewrite is loaded. Without mod_rewrite, it is
  # not possible to block access to entire directories from .htaccess because
  # <DirectoryMatch> is not allowed here.
  #
  # If you do not have mod_rewrite installed, you should remove these
  # directories from your webroot or otherwise protect them from being
  # downloaded.
  RewriteRule "/\.|^\.(?!well-known/)" - [F]

  # If your site can be accessed both with and without the 'www.' prefix, you
  # can use one of the following settings to redirect users to your preferred
  # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:
  #
  # To redirect all users to access the site WITH the 'www.' prefix,
  # (http://example.com/foo will be redirected to http://www.example.com/foo)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} .
  # RewriteCond %{HTTP_HOST} !^www\. [NC]
  # RewriteRule ^ http%{ENV:protossl}://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  #
  # To redirect all users to access the site WITHOUT the 'www.' prefix,
  # (http://www.example.com/foo will be redirected to http://example.com/foo)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  # RewriteRule ^ http%{ENV:protossl}://%1%{REQUEST_URI} [L,R=301]

  # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
  # VirtualDocumentRoot and the rewrite rules are not working properly.
  # For example if your site is at http://example.com/drupal uncomment and
  # modify the following line:
  # RewriteBase /drupal
  #
  # If your site is running in a VirtualDocumentRoot at http://example.com/,
  # uncomment the following line:
  # RewriteBase /

  # Redirect common PHP files to their new locations.
  RewriteCond %{REQUEST_URI} ^(.*)?/(install.php) [OR]
  RewriteCond %{REQUEST_URI} ^(.*)?/(rebuild.php)
  RewriteCond %{REQUEST_URI} !core
  RewriteRule ^ %1/core/%2 [L,QSA,R=301]

  # Rewrite install.php during installation to see if mod_rewrite is working
  RewriteRule ^core/install.php core/install.php?rewrite=ok [QSA,L]

  # Redirect non-WWW to WWW.
  RewriteCond %{HTTP_HOST} ^seattleymca\.org [NC]
  RewriteRule ^ http%{ENV:protossl}://www.seattleymca.org%{REQUEST_URI} [R=301,L]

  # Redirect HTTP to HTTPS only for Acquia PROD environment.
  RewriteCond %{ENV:AH_SITE_ENVIRONMENT} prod [NC]
  RewriteCond %{HTTPS} off
  RewriteCond %{HTTP:X-Forwarded-Proto} !https
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

  # Pass all requests not referring directly to files in the filesystem to
  # index.php.
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_URI} !=/favicon.ico
  RewriteRule ^ index.php [L]

  # For security reasons, deny access to other PHP files on public sites.
  # Note: The following URI conditions are not anchored at the start (^),
  # because Drupal may be located in a subdirectory. To further improve
  # security, you can replace '!/' with '!^/'.
  # Allow access to PHP files in /core (like authorize.php or install.php):
  RewriteCond %{REQUEST_URI} !/core/[^/]*\.php$
  # Allow access to test-specific PHP files:
  RewriteCond %{REQUEST_URI} !/core/modules/system/tests/https?.php
  # Allow access to Statistics module's custom front controller.
  # Copy and adapt this rule to directly execute PHP files in contributed or
  # custom modules or to run another PHP application in the same directory.
  RewriteCond %{REQUEST_URI} !/core/modules/statistics/statistics.php$
  # Allow access to simplesaml paths
  RewriteCond %{REQUEST_URI} !^/simplesaml
  # Deny access to any other PHP files that do not match the rules above.
  # Specifically, disallow autoload.php from being served directly.
  RewriteRule "^(.+/.*|autoload)\.php($|/)" - [F]

  # Rules to correctly serve gzip compressed CSS and JS files.
  # Requires both mod_rewrite and mod_headers to be enabled.
  <IfModule mod_headers.c>
    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

    # Serve gzip compressed JS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header set Content-Encoding gzip
      # Force proxies to cache gzipped & non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
  </IfModule>
</IfModule>

# Various header fixes.
<IfModule mod_headers.c>
  # Disable content sniffing, since it's an attack vector.
  Header always set X-Content-Type-Options nosniff
  # Disable Proxy header, since it's an attack vector.
  RequestHeader unset Proxy
</IfModule>
# Restrict access to YAML files.
<Files ~ "\.yml$">
  Order Allow,Deny
  Deny from All
</Files>
